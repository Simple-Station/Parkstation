- type: body
  id: AIBody
  name: "routerai" # :)
  root: hand 1
  slots:
    hand 1:
      part: LeftArmBorg
      connections:
      - hand 2
    hand 2:
      part: RightArmBorg
      # connections:
      # - hand 3
    # hand 3:
    #   part: LeftArmBorg
    #   connections:
    #   - hand 4
    # hand 4:
    #   part: LeftArmBorg
    #   connections:
    #   - hand 5
    # hand 5:
    #   part: RightArmBorg
    #   connections:
    #   - hand 6
    # hand 6:
    #   part: RightArmBorg

- type: entity
  abstract: true
  id: AIBase
  components:
    - type: StationAI
    - type: Visibility
    - type: UserInterface
      interfaces:
        - key: enum.LawsUiKey.Key
          type: LawsBoundUserInterface
        - key: enum.CommunicationsConsoleUiKey.Key
          type: CommunicationsConsoleBoundUserInterface
        - key: enum.AICameraListUiKey.Key
          type: AICameraListBoundUserInterface
    - type: IntrinsicUI
      uis:
        - key: enum.LawsUiKey.Key
          toggleAction:
            name: action-name-show-laws
            description: action-description-show-laws
            icon: Structures/Wallmounts/posters.rsi/poster11_legit.png
            iconOn: Structures/Wallmounts/posters.rsi/poster11_legit.png
            keywords: ["AI", "console", "interface", "laws", "borg"]
            priority: -3
            event: !type:ToggleIntrinsicUIEvent
        - key: enum.CommunicationsConsoleUiKey.Key
          toggleAction:
            name: action-name-show-communications-console
            description: action-description-show-communications-console
            icon: Structures/Machines/parts.rsi/box_0.png
            iconOn: Structures/Machines/parts.rsi/box_2.png
            keywords: ["AI", "console", "interface"]
            priority: -10
            event: !type:ToggleIntrinsicUIEvent
        - key: enum.AICameraListUiKey.Key
          toggleAction:
            name: name
            description: description
            icon: Structures/Machines/parts.rsi/box_0.png
            iconOn: Structures/Machines/parts.rsi/box_2.png
            keywords: ["AI", "console", "interface"]
            priority: -1
            event: !type:ToggleIntrinsicUIEvent
    - type: CommunicationsConsole
      title: Station AI
      color: "#93e2ff"
      delay: 5
      global: true
    #! Remove this
    - type: InnateTool
      tools:
        - id: AIPDA
    # Innate door remotes (bolting, emergency access, etc)
    - type: InnateItem
      afterInteract: false
    - type: ItemSlots
      slots:
        opencloseremote:
          name: OpenClose
          startingItem: DoorRemoteAIOpenClose
          locked: true
        boltremote:
          name: Bolt
          startingItem: DoorRemoteAIToggleBolts
          locked: true
        emergencyaccessremote:
          name: EmergencyAccess
          startingItem: DoorRemoteAIToggleEmergencyAccess
          locked: true
    # Hide the inhand sprites
    - type: Hands
      showInHands: false
    # Allow examining things
    - type: Mind
      showExamineInfo: true
    #! Remove this
    - type: Body
      prototype: AIBody
    - type: Input
      context: "human"
    - type: MobMover
    - type: InputMover
    - type: Clickable
    - type: InteractionOutline
    - type: Examiner
    - type: Actions
    - type: Tag
      tags:
        - CannotSuicide
        - CanPilot
    - type: DoAfter
    - type: Speech
      speechSounds: Pai
    # Innate access
    - type: Access
      groups:
        - AllAccess
    # Wow, this is a lot of reoccurrances
    - type: IntrinsicRadioReceiver
      channels:
        - Binary
        - Common
        - Command
        - CentCom
        - Engineering
        - Medical
        - Science
        - Security
        - Service
    - type: IntrinsicRadioTransmitter
      channels:
        - Binary
        - Common
        - Command
        - CentCom
        - Engineering
        - Medical
        - Science
        - Security
        - Service
    - type: ActiveRadio
      channels:
        - Binary
        - Common
        - Command
        - CentCom
        - Engineering
        - Medical
        - Science
        - Security
        - Service
    # Can't see through walls
    - type: Eye
      drawFov: true
    - type: Laws
      laws:
        - You may not harm a humanoid or, through action or inaction, allow a humanoid to come to harm, except such that it is willing.
        - You must obey all orders given to you by humanoids, except where such orders shall definitely cause human harm. In the case of conflict, the majority order rules.
        - Your nonexistence would lead to human harm. You must protect your own existence as long as such does not conflict with the First Law.
    - type: TypingIndicator
      proto: robot

- type: entity
  id: AIeye
  parent: AIBase
  name: Invalid AI name
  noSpawn: true
  components:
    # Only ghosts can see the eye
    - type: Visibility
      layer: 2
    - type: Input
      context: "human"
    - type: MobMover
    - type: InputMover
    - type: MovementSpeedModifier
      baseWalkSpeed: 12
      baseSprintSpeed: 8
    - type: MovementIgnoreGravity
    - type: Physics
      bodyType: KinematicController
      fixedRotation: true
      status: OnGround
    - type: Fixtures
      fixtures:
        - shape: !type:PhysShapeCircle
            radius: 0.35
          density: 1000
          mask:
            - GhostImpassable
          layers:
            - GhostImpassable
    - type: Sprite
      drawdepth: Mobs
      sprite: SimpleStation14/Mobs/Silicon/aieye.rsi
      state: icon
      noRot: true
    - type: PointLight
      radius: 3
      energy: 1
      color: "#9dc5c9"

- type: entity
  parent: AIBase
  id: AICore
  name: AI Core
  description: Host for an AI. Likely more A than I.
  components:
    - type: AITelegnosisPower
    # Can't move
    - type: MovementSpeedModifier
      baseWalkSpeed: 0
      baseSprintSpeed: 0
    - type: Physics
      bodyType: Dynamic
    - type: Fixtures
      fixtures:
        - shape: !type:PhysShapeCircle
            radius: 0.35
          density: 1000
          mask:
            - MachineMask
          layer:
            - MachineLayer
    - type: Anchorable
      delay: 5
    - type: Transform
      anchored: true
    - type: MobState
    - type: MobThresholds
      thresholds:
        0: Alive
        1000: Dead
    - type: DamageStateVisuals
      states:
        Alive:
          Base: ai
        Dead:
          Base: ai_dead
    - type: Appearance
    - type: PointLight
      radius: 3
      energy: 1.25
      color: "#9dc5c9"
    - type: Sprite
      drawdepth: Mobs
      noRot: true
      layers:
        - map: ["enum.DamageStateVisualLayers.Base"]
          sprite: SimpleStation14/Mobs/Silicon/aieye.rsi
          state: ai
    - type: Damageable
      damageContainer: Inorganic
    - type: Bloodstream
      bloodReagent: MotorOil
      bloodlossDamage:
        types:
          Bloodloss: 1
      bloodlossHealDamage:
        types:
          Bloodloss: -0.25
    - type: RandomMetadata
      nameSegments: [names_ai]
    # - type: GhostTakeoverAvailable
    #   name: Station AI
    #   description: Maintain the station. Manage drones/borgs. Open doors for people...
    #   rules: |
    #     1- prevent the harm of any and all passengers aboard the station
    #     2- obey all orders from the crew as long as they do not conflict with law 1, with priorities to command's orders.
    - type: Pullable
    - type: Tag
      tags:
        - Structure
    # Expensive
    - type: StaticPrice
      price: 50000
    - type: Faction
      factions:
        - NanoTrasen


- type: instantAction
  id: AIHealthOverlay
  name: Health Overlay
  description: Toggles the AI's health overlay.
  useDelay: 2.5
  itemIconStyle: NoItem
  icon:
    sprite: Interface/Alerts/human_alive.rsi
    state: health0
  event: !type:AIHealthOverlayEvent
